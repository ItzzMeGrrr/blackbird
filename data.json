{
  "sites": [
    {
      "app": "Facebook",
      "id": 1,
      "method": "GET",
      "url": "https://www.facebook.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "YouTube",
      "id": 2,
      "method": "GET",
      "url": "https://www.youtube.com/user/{username}",
      "valid": "response.status == 200 and 'name\" content=' in responseContent"
    },
    {
      "app": "Twitter",
      "id": 3,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('a', class_='profile-card-fullname')['title']"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('div',class_='profile-bio').string"
        },
        {
          "key": "Site",
          "type": "generic-data",
          "value": "soup.find('div',class_='profile-website').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Member since",
          "type": "generic-data",
          "value": "soup.find('div',class_='profile-joindate').find('span')['title']"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "'https://nitter.net'+soup.find('a', class_='profile-card-avatar')['href']"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.select_one('.profile-location:nth-of-type(2)').text.strip('\\t\\r\\n')"
        }
      ],
      "method": "GET",
      "url": "https://nitter.net/{username}",
      "valid": "response.status == 200 and ') | nitter</title>' in responseContent"
    },
    {
      "app": "Telegram",
      "id": 4,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('span', dir='auto').string"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img', class_='tgme_page_photo_image')['src']"
        }
      ],
      "method": "GET",
      "url": "https://t.me/{username}",
      "valid": "'You can contact' in soup.find('meta', property='og:description')['content'] and 'tgme_page_title' in responseContent"
    },
    {
      "app": "TikTok",
      "id": 5,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').text"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('h2', attrs={'data-e2e':'user-bio'}).text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://www.tiktok.com/@{username}",
      "valid": "response.status == 200 and 'title=\"Following\"' in responseContent"
    },
    {
      "app": "Tinder",
      "id": 6,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('meta', property='profile:first_name')['content']"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('meta', property='og:image')['content']"
        }
      ],
      "method": "GET",
      "url": "https://tinder.com/@{username}",
      "valid": "'@' in soup.find('meta', property='og:title')['content'] and ') | Tinder</title><meta' in responseContent"
    },
    {
      "app": "Instagram",
      "id": 7,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h2', class_='profile-name-bottom').string"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('div', class_='profile-description').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Followers",
          "type": "generic-data",
          "value": "soup.find('span', class_='followed_by').string"
        },
        {
          "key": "Following",
          "type": "generic-data",
          "value": "soup.find('span', class_='follows').string"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('div', class_='profile-avatar').find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://www.picuki.com/profile/{username}",
      "valid": "response.status == 200 and 'Instagram profile with posts and stories' in responseContent"
    },
    {
      "app": "Pinterest",
      "id": 8,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').string "
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('meta', property='og:description')['content']"
        },
        {
          "key": "Followers",
          "type": "generic-data",
          "value": "soup.find('meta', property='pinterestapp:followers')['content']"
        },
        {
          "key": "Following",
          "type": "generic-data",
          "value": "soup.find('meta', property='pinterestapp:following')['content']"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://pinterest.com/{username}/",
      "valid": "response.status == 200 and ' - Profile | Pinterest' in responseContent"
    },
    {
      "app": "Snapchat",
      "id": 9,
      "metadata": [
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('image')['xlink:href']"
        }
      ],
      "method": "GET",
      "url": "https://feelinsonice.appspot.com/web/deeplink/snapcode?username={username}&size=400&type=SVG",
      "valid": "soup.find('defs') != None and '</clipPath>' in responseContent"
    },
    {
      "app": "Reddit",
      "id": 10,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "jsonData['data']['subreddit']['title']"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "jsonData['data']['subreddit']['public_description']"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "jsonData['data']['snoovatar_img']"
        }
      ],
      "method": "GET",
      "url": "https://www.reddit.com/user/{username}/about.json",
      "valid": "response.status == 200 and 'total_karma' in responseContent"
    },
    {
      "app": "Soundcloud",
      "id": 11,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('header').find('p').string"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('meta',property='og:locality')['content']+', '+soup.find('meta',property='og:country-name')['content']"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('meta',property='twitter:image')['content']"
        }
      ],
      "method": "GET",
      "url": "https://soundcloud.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Github",
      "id": 12,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('span',class_='p-name').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Nickname",
          "type": "generic-data",
          "value": "soup.find('span',class_='p-nickname').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Site",
          "type": "generic-data",
          "value": "soup.find('a',rel='nofollow me').text"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('span',class_='p-label').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('meta',property='og:image')['content']"
        }
      ],
      "method": "GET",
      "url": "https://github.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Steam",
      "id": 13,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('div',class_='header_real_name').find('bdi').text"
        },
        {
          "key": "Nickname",
          "type": "generic-data",
          "value": "soup.find('span',class_='actual_persona_name').string"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('meta',property='og:description')['content']"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('img',class_='profile_flag').next_sibling.strip('\\t\\r\\n')"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('link',rel='image_src')['href']"
        }
      ],
      "method": "GET",
      "url": "https://steamcommunity.com/id/{username}/",
      "valid": "'Error' not in soup.find('title').string and 'g_rgProfileData =' in responseContent"
    },
    {
      "app": "Linktree",
      "id": 14,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').string"
        },
        {
          "key": "Description",
          "type": "generic-data",
          "value": "soup.find('meta',attrs={'name':'description'})['content']"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('meta',property='og:image')['content']"
        }
      ],
      "method": "GET",
      "url": "https://linktr.ee/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Xbox Gamertag",
      "id": 15,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').string"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "'https:' + soup.find('img',class_='rounded img-thumbnail')['src']"
        }
      ],
      "method": "GET",
      "url": "https://www.xboxgamertag.com/search/{username}",
      "valid": "response.status == 200 and 'Games Played' in responseContent"
    },
    {
      "app": "Twitter Archived",
      "id": 16,
      "method": "GET",
      "url": "http://archive.org/wayback/available?url=https://twitter.com/{username}",
      "valid": "'available' in responseContent"
    },
    {
      "app": "Xvideos",
      "id": 17,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('div',id='profile-title').find('strong').text"
        },
        {
          "key": "Gender",
          "type": "generic-data",
          "value": "soup.find('p',id='pinfo-sex').find('span').text"
        },
        {
          "key": "Age",
          "type": "generic-data",
          "value": "soup.find('p',id='pinfo-age').find('span').text"
        },
        {
          "key": "Member since",
          "type": "generic-data",
          "value": "soup.find('p',id='pinfo-signedup').find('span').text"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('p',id='pinfo-city').find('span').text+', '+soup.find('p',id='pinfo-country').find('span').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://www.xvideos.com/profiles/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "PornHub",
      "id": 18,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('div',class_='profileUserName').find('a').string"
        },
        {
          "key": "Gender",
          "type": "generic-data",
          "value": "soup.find('dl',class_='moreInformation').select_one('dd:nth-of-type(1)').string"
        },
        {
          "key": "Last login",
          "type": "generic-data",
          "value": "soup.find('dl',class_='moreInformation').select_one('dd:nth-of-type(2)').string"
        },
        {
          "key": "Relationship Status",
          "type": "generic-data",
          "value": "soup.find('dl',class_='moreInformation').select_one('dd:nth-of-type(3)').string"
        },
        {
          "key": "Interested In",
          "type": "generic-data",
          "value": "soup.find('dl',class_='moreInformation').select_one('dd:nth-of-type(4)').string"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('dl',class_='moreInformation').select_one('dd:nth-of-type(5)').string+', '+soup.find('dl',class_='moreInformation').select_one('dd:nth-of-type(6)').string"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img',id='getAvatar')['src']"
        }
      ],
      "method": "GET",
      "url": "https://www.pornhub.com/users/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Xhamster",
      "id": 19,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('div',class_='user-name').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Gender",
          "type": "generic-data",
          "value": "soup.find('div',class_='i-am').find(class_='value').text"
        },
        {
          "key": "Last login",
          "type": "generic-data",
          "value": "soup.find('div',class_='offline').text"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('div',class_='from').find(class_='value').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img',class_='xh-avatar')['src']"
        }
      ],
      "method": "GET",
      "url": "https://xhamster.com/users/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Vimeo",
      "id": 22,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('meta', property='og:title')['content']"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('meta', property='og:description')['content']"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('meta', property='og:image')['content']"
        }
      ],
      "method": "GET",
      "url": "https://vimeo.com/{username}",
      "valid": "response.status == 200 and soup.find('title').text != 'VimeOhOh' and 'is a member of Vimeo, the' in responseContent"
    },
    {
      "app": "Pastebin",
      "id": 23,
      "metadata": [
        {
          "key": "Member since",
          "type": "generic-data",
          "value": "soup.find('span',class_='date-text')['title']"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('span',class_='location').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "'https://pastebin.com'+soup.find('div',class_='user-icon').find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://pastebin.com/u/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "WordPress Site",
      "id": 25,
      "method": "GET",
      "url": "https://{username}.wordpress.com/",
      "valid": "'Do you want to register' not in responseContent and 'cannot be registered' not in responseContent"
    },
    {
      "app": "AllMyLinks",
      "id": 26,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('span',class_='profile-username').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('p',class_='profile-bio').text.strip('\\t\\r\\n')"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('meta',property='og:image')['content']"
        }
      ],
      "method": "GET",
      "url": "https://allmylinks.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Kickstarter",
      "id": 30,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h2').text.strip('\\n')"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "html.unescape(soup.find('div',id='profile_avatar').find('img')['src'])"
        }
      ],
      "method": "GET",
      "url": "https://www.kickstarter.com/profile/{username}",
      "valid": "response.status == 200 and 'projects' in responseContent"
    },
    {
      "app": "Blogspot",
      "id": 32,
      "method": "GET",
      "url": "https://{username}.blogspot.com/",
      "valid": "response.status == 200 and 'Blogger Template Style' in responseContent"
    },
    {
      "app": "Internet Archive",
      "id": 34,
      "method": "GET",
      "url": "https://archive.org/details/@{username}",
      "valid": "'cannot find account' not in soup.find('title').string"
    },
    {
      "app": "MySpace",
      "id": 37,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('div',id='aboutMe').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Site",
          "type": "generic-data",
          "value": "soup.find('div',class_='website').string.strip('\\t\\r\\n')"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('div',class_='location').string.strip('\\t\\r\\n')"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('a',id='profileImage').find('img')['src']"
        }
      ],
      "method": "GET",
      "url": "https://myspace.com/{username}",
      "valid": "response.status == 200 and '<!-- Profile -->' in responseContent"
    },
    {
      "app": "Disqus",
      "id": 38,
      "method": "GET",
      "url": "https://disqus.com/by/{username}/",
      "valid": "response.status == 200 and '<title>Disqus Profile' in responseContent"
    },
    {
      "app": "Slideshare",
      "id": 39,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h1').text.strip('\\t\\r\\n')"
        },
        {
          "key": "Bio",
          "type": "generic-data",
          "value": "soup.find('span',class_='description').text"
        },
        {
          "key": "location",
          "type": "location",
          "value": "soup.find('span',class_='city').text+', '+soup.find('span',class_='country-name').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img',class_='user-photo')['src']"
        }
      ],
      "method": "GET",
      "url": "https://www.slideshare.net/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Ebay",
      "id": 41,
      "method": "GET",
      "url": "https://www.ebay.com/usr/{username}",
      "valid": "'error' not in soup.find('title').string and response.status == 200"
    },
    {
      "app": "Kik",
      "id": 43,
      "method": "GET",
      "url": "https://ws2.kik.com/user/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Roblox",
      "id": 44,
      "method": "GET",
      "url": "https://auth.roblox.com/v1/usernames/validate?username={username}&birthday=2019-12-31T23:00:00.000Z",
      "valid": "'Username is already in use' in jsonData['message']"
    },
    {
      "app": "Fortnite Tracker",
      "id": 46,
      "method": "GET",
      "url": "https://fortnitetracker.com/profile/all/{username}",
      "valid": "response.status == 200 and 's Fortnite Stats - Fortnite Tracker' in responseContent"
    },
    {
      "app": "Duolingo",
      "id": 47,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "json['users'][0]['name']"
        }
      ],
      "method": "GET",
      "url": "https://www.duolingo.com/2017-06-30/users?username={username}&_=1628308619574",
      "valid": "len(jsonData['users']) > 0"
    },
    {
      "app": "Chess",
      "id": 48,
      "method": "GET",
      "url": "https://www.chess.com/member/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Shopify",
      "id": 49,
      "method": "GET",
      "url": "https://{username}.myshopify.com/",
      "valid": "response.status == 200"
    },
    {
      "app": "Cash APP",
      "id": 52,
      "method": "GET",
      "url": "https://cash.app/${username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Imgur",
      "id": 53,
      "method": "GET",
      "url": "https://api.imgur.com/account/v1/accounts/{username}?client_id=546c25a59c58ad7&include=trophies%2Cmedallions",
      "valid": "response.status == 200"
    },
    {
      "app": "Minecraft",
      "id": 55,
      "metadata": [
        {
          "key": "picture",
          "type": "image",
          "value": "jsonData['data']['player']['avatar']"
        }
      ],
      "method": "GET",
      "url": "https://playerdb.co/api/player/minecraft/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Patreon",
      "id": 56,
      "method": "GET",
      "url": "https://www.patreon.com/{username}",
      "valid": "response.status == 200 and 'Become a patron of' in responseContent"
    },
    {
      "app": "DockerHub",
      "id": 57,
      "method": "GET",
      "url": "https://hub.docker.com/v2/users/{username}/",
      "valid": "response.status == 200 and 'username' in responseContent"
    },
    {
      "app": "Vine",
      "id": 59,
      "method": "GET",
      "url": "https://vine.co/api/users/profiles/vanity/{username}",
      "valid": "response.status == 200 and 'userId' in responseContent"
    },
    {
      "app": "Gamespot",
      "id": 60,
      "method": "GET",
      "url": "https://www.gamespot.com/profile/{username}/",
      "valid": "response.status == 200 and 's Profile - GameSpot</title>' in responseContent"
    },
    {
      "app": "Shutterstock",
      "id": 61,
      "method": "GET",
      "url": "https://www.shutterstock.com/pt/g/{username}/about",
      "valid": "response.status == 200"
    },
    {
      "app": "ProtonMail",
      "headers": "{'X-Pm-Appversion': 'web-account@4.28.2','X-Pm-Appversion': 'web-account@4.28.2'}",
      "id": 63,
      "method": "GET",
      "url": "https://account.protonmail.com/api/users/available?Name={username}",
      "valid": "response.status == 409"
    },
    {
      "app": "TripAdvisor",
      "id": 64,
      "method": "GET",
      "url": "https://www.tripadvisor.com/Profile/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Wikipedia",
      "id": 67,
      "method": "GET",
      "url": "https://en.wikipedia.org/w/api.php?action=query&format=json&list=users&ususers={username}&usprop=cancreate&formatversion=2&errorformat=html&errorsuselocal=true&uselang=en",
      "valid": "response.status == 200 and 'userid' in responseContent"
    },
    {
      "app": "Buymeacoffe",
      "id": 68,
      "method": "GET",
      "url": "https://www.buymeacoffee.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "League of Legends Tracker",
      "id": 70,
      "method": "GET",
      "url": "https://tracker.gg/lol/profile/riot/NA/{username}/overview",
      "valid": "response.status == 200"
    },
    {
      "app": "Fiverr",
      "id": 72,
      "method": "GET",
      "url": "https://www.fiverr.com/{username}",
      "valid": "response.status == 200 and 'member-since' in responseContent"
    },
    {
      "app": "Dribble",
      "id": 74,
      "method": "GET",
      "url": "https://dribbble.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Medium",
      "id": 77,
      "method": "GET",
      "url": "https://{username}.medium.com/about",
      "valid": "response.status == 200 and 'Medium member since' in responseContent"
    },
    {
      "app": "HackerOne",
      "id": 80,
      "method": "GET",
      "url": "https://hackerone.com/{username}?type=user",
      "valid": "response.status == 200 and 'profile that highlights' in responseContent"
    },
    {
      "app": "BugCrowd",
      "id": 81,
      "method": "GET",
      "url": "https://bugcrowd.com/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "TryHackMe",
      "id": 83,
      "method": "GET",
      "url": "https://tryhackme.com/p/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Freelancer",
      "id": 92,
      "method": "GET",
      "url": "https://www.freelancer.com/u/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "BitBucket",
      "id": 94,
      "method": "GET",
      "url": "https://bitbucket.org/{username}/",
      "valid": "response.status == 200"
    },
    {
      "app": "Flickr",
      "id": 96,
      "method": "GET",
      "url": "https://www.flickr.com/photos/{username}/",
      "valid": "response.status == 200 and '| Flickr' in responseContent"
    },
    {
      "app": "Spotify",
      "id": 98,
      "method": "GET",
      "url": "https://open.spotify.com/user/{username}",
      "valid": "response.status == 200 and 'on Spotify</title>' in responseContent"
    },
    {
      "app": "Snapchat Stories",
      "id": 99,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('h4').string"
        }
      ],
      "method": "GET",
      "url": "https://story.snapchat.com/s/{username}",
      "valid": "response.status == 200 and 'is on Snapchat!' in responseContent"
    },
    {
      "app": "Venmo",
      "id": 111,
      "method": "GET",
      "url": "https://account.venmo.com/u/{username}",
      "valid": "response.status == 200 and '\"profileInfo_username__' in responseContent"
    },
    {
      "app": "Giphy",
      "id": 123,
      "method": "GET",
      "url": "https://giphy.com/channel/{username}",
      "valid": "response.status == 200 and 'Share on GIPHY</title>' in responseContent"
    },
    {
      "app": "Codecademy",
      "id": 127,
      "method": "GET",
      "url": "https://discuss.codecademy.com/u/{username}/summary",
      "valid": "response.status == 200 and '<title>  Profile - ' in responseContent"
    },
    {
      "app": "Mastodon",
      "id": 132,
      "metadata": [
        {
          "key": "Name",
          "type": "generic-data",
          "value": "soup.find('strong',class_='display-name__html').text"
        },
        {
          "key": "picture",
          "type": "image",
          "value": "soup.find('img',id='profile_page_avatar')['src']"
        }
      ],
      "method": "GET",
      "url": "https://mastodon.social/@{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "NPM",
      "id": 140,
      "method": "GET",
      "url": "https://www.npmjs.com/~{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "PyPI",
      "id": 141,
      "method": "GET",
      "url": "https://pypi.org/user/{username}/",
      "valid": "response.status == 200"
    },
    {
      "app": "About me",
      "id": 144,
      "method": "GET",
      "url": "https://about.me/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Pikabu",
      "id": 149,
      "method": "GET",
      "url": "https://pikabu.ru/@{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Academia.edu",
      "id": 157,
      "method": "GET",
      "url": "https://independent.academia.edu/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Apple Developer",
      "id": 161,
      "method": "GET",
      "url": "https://developer.apple.com/forums/profile/{username}",
      "valid": "response.status == 200"
    },
    {
      "app": "Apple Discussions",
      "id": 162,
      "method": "GET",
      "url": "https://discussions.apple.com/profile/{username}",
      "valid": "response.status == 200 and 'The page you tried was not found. You may have used an outdated link or may have typed the address (URL) incorrectly.' not in responseContent"
    },
    {
      "app": "about me",
      "id": 177,
      "method": "GET",
      "url": "https://about.me/{username}",
      "valid": "response.status == 200 and ' | about.me' in responseContent"
    },
    {
      "app": "Apex Legends",
      "id": 193,
      "method": "GET",
      "url": "https://apex.tracker.gg/apex/profile/origin/{username}/overview",
      "valid": "response.status == 200 and 'Overview' in responseContent"
    },
    {
      "app": "cash app",
      "id": 229,
      "method": "GET",
      "url": "https://cash.app/${username}",
      "valid": "response.status == 200 and ' on Cash App</title>' in responseContent"
    },
    {
      "app": "Dribbble",
      "id": 269,
      "method": "GET",
      "url": "https://dribbble.com/{username}",
      "valid": "response.status == 200 and ' | Dribbble' in responseContent"
    },
    {
      "app": "Fandom",
      "id": 285,
      "method": "GET",
      "url": "https://www.fandom.com/u/{username}",
      "valid": "response.status == 200 and '| Profile | Fandom' in responseContent"
    },
    {
      "app": "fansly",
      "id": 287,
      "method": "GET",
      "url": "https://apiv2.fansly.com/api/v1/account?usernames={username}",
      "valid": "response.status == 200 and 'username' in responseContent"
    },
    {
      "app": "Flipboard",
      "id": 292,
      "method": "GET",
      "url": "https://flipboard.com/@{username}",
      "valid": "response.status == 200 and ') on Flipboard' in responseContent"
    },
    {
      "app": "GitLab",
      "id": 313,
      "method": "GET",
      "url": "https://gitlab.com/{username}",
      "valid": "response.status == 200 and 'Member since' in responseContent"
    },
    {
      "app": "Gravatar",
      "id": 319,
      "method": "GET",
      "url": "http://en.gravatar.com/profiles/{username}.json",
      "valid": "response.status == 200 and 'entry' in responseContent"
    },
    {
      "app": "Hacker News",
      "id": 321,
      "method": "GET",
      "url": "https://news.ycombinator.com/user?id={username}",
      "valid": "response.status == 200 and 'created:' in responseContent"
    },
    {
      "app": "kaggle",
      "id": 355,
      "method": "GET",
      "url": "https://www.kaggle.com/{username}",
      "valid": "response.status == 200 and '| Kaggle' in responseContent"
    },
    {
      "app": "LINE",
      "id": 363,
      "method": "GET",
      "url": "https://line.me/R/ti/p/@{username}?from=page",
      "valid": "response.status == 200 and 'Add LINE Friends via QR Code' in responseContent"
    },
    {
      "app": "olx",
      "id": 410,
      "method": "GET",
      "url": "https://www.olx.pl/oferty/uzytkownik/{username}/",
      "valid": "response.status == 200 and 'Obserwuj wyszukiwanie' in responseContent"
    },
    {
      "app": "PCGamer",
      "id": 424,
      "method": "GET",
      "url": "https://forums.pcgamer.com/members/{username}/",
      "valid": "response.status == 200 and 'Joined' in responseContent"
    },
    {
      "app": "PhotoBucket",
      "id": 428,
      "method": "GET",
      "url": "https://app.photobucket.com/u/{username}",
      "valid": "response.status == 200 and 'content=\\'My Library' in responseContent"
    },
    {
      "app": "Picsart",
      "id": 429,
      "method": "GET",
      "url": "https://picsart.com/u/{username}",
      "valid": "response.status == 200 and 'Profiles on Picsart' in responseContent"
    },
    {
      "app": "Quora",
      "id": 452,
      "method": "GET",
      "url": "https://www.quora.com/profile/{username}",
      "valid": "response.status == 200 and 'Credentials' in responseContent"
    },
    {
      "app": "Researchgate",
      "id": 455,
      "method": "GET",
      "url": "https://www.researchgate.net/profile/{username}",
      "valid": "response.status == 200 and ' | ' in responseContent"
    },
    {
      "app": "themeforest",
      "id": 511,
      "method": "GET",
      "url": "https://themeforest.net/user/{username}",
      "valid": "response.status == 200 and 's profile on ThemeForest' in responseContent"
    },
    {
      "app": "tumblr",
      "id": 518,
      "method": "GET",
      "url": "https://{username}.tumblr.com",
      "valid": "response.status == 200 and 'avatar' in responseContent"
    },
    {
      "app": "Twitch",
      "id": 521,
      "method": "GET",
      "url": "https://twitchtracker.com/search?q={username}",
      "valid": "response.status == 200 and 'Found Exact Match' in responseContent"
    },
    {
      "app": "Twitter archived profile",
      "id": 522,
      "method": "GET",
      "url": "http://archive.org/wayback/available?url=https://twitter.com/{username}",
      "valid": "response.status == 200 and '\"archived_snapshots\": {\"closest\"' in responseContent"
    },
    {
      "app": "Twitter archived tweets",
      "id": 523,
      "method": "GET",
      "url": "http://archive.org/wayback/available?url=https://twitter.com/{username}/status/*",
      "valid": "response.status == 200 and '\"archived_snapshots\": {\"closest\"' in responseContent"
    },
    {
      "app": "Udemy",
      "id": 525,
      "method": "GET",
      "url": "https://www.udemy.com/user/{username}/",
      "valid": "response.status == 200 and 'profile' in soup.find('meta', attrs={'name':'type'})['content']"
    },
    {
      "app": "unsplash",
      "id": 529,
      "method": "GET",
      "url": "https://unsplash.com/@{username}",
      "valid": "response.status == 200 and '| Unsplash Photo Community' in responseContent"
    },
    {
      "app": "Virustotal",
      "id": 536,
      "method": "GET",
      "url": "https://www.virustotal.com/gui/user/{username}",
      "valid": "response.status == 200 and 'USER PROFILE' in responseContent"
    },
    {
      "app": "VK",
      "id": 539,
      "method": "GET",
      "url": "https://vk.com/{username}",
      "valid": "response.status == 200 and ' | VK</title>' in responseContent"
    },
    {
      "app": "XVIDEOS-profiles",
      "id": 564,
      "method": "GET",
      "url": "https://www.xvideos.com/profiles/{username}",
      "valid": "response.status == 200 and 'page - XVIDEOS.COM' in responseContent"
    },
    {
      "app": "Yelp",
      "id": 567,
      "method": "GET",
      "url": "https://www.yelp.com/user_details?userid={username}",
      "valid": "response.status == 200 and '\\'s Reviews |' in responseContent"
    },
    {
      "app": "Zomato",
      "id": 573,
      "method": "GET",
      "url": "https://www.zomato.com/{username}/foodjourney",
      "valid": "response.status == 200 and '| Zomato' in responseContent"
    }
  ]
}